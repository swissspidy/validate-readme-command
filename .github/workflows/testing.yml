name: Testing

on:
  pull_request:
  push:
    branches:
    - main
    - master

# Cancels all previous workflow runs for the same branch that have not yet completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  functional: #----------------------------------------------------------------------
    name: Functional - WP ${{ matrix.wp }} on PHP ${{ matrix.php }} with MySQL ${{ matrix.mysql }}
    strategy:
      fail-fast: false
      matrix:
        php: ['7.4', '8.0', '8.1', '8.2', '8.3', '8.4']
        wp: ['latest']
        mysql: ['8.0']
    runs-on: ubuntu-22.04

    services:
      mysql:
        image: mysql:${{ matrix.mysql }}
        ports:
        - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3 -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=wp_cli_test --entrypoint sh mysql:${{ matrix.mysql }} -c "exec docker-entrypoint.sh mysqld --default-authentication-plugin=mysql_native_password"

    steps:
    - name: Check out source code
      uses: actions/checkout@v5

    - name: Install Ghostscript
      run: |
        sudo apt-get update
        sudo apt-get install ghostscript -y

    - name: Set up PHP envirnoment
      uses: shivammathur/setup-php@v2
      with:
        php-version: '${{ matrix.php }}'
        extensions: gd, imagick, mysql, zip
        coverage: none
        tools: composer
      env:
        COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Change ImageMagick policy to allow pdf->png conversion.
      run: |
        sudo sed -i 's/^.*policy.*coder.*none.*PDF.*//' /etc/ImageMagick-6/policy.xml

    - name: Install Composer dependencies & cache dependencies
      uses: "ramsey/composer-install@v3"
      env:
        COMPOSER_ROOT_VERSION: dev-${{ github.event.repository.default_branch }}

    - name: Start MySQL server
      run: sudo systemctl start mysql

    - name: Configure DB environment
      run: |
        echo "MYSQL_HOST=127.0.0.1" >> $GITHUB_ENV
        echo "MYSQL_TCP_PORT=${{ job.services.mysql.ports['3306'] }}" >> $GITHUB_ENV
        echo "WP_CLI_TEST_DBROOTUSER=root" >> $GITHUB_ENV
        echo "WP_CLI_TEST_DBROOTPASS=root" >> $GITHUB_ENV
        echo "WP_CLI_TEST_DBNAME=wp_cli_test" >> $GITHUB_ENV
        echo "WP_CLI_TEST_DBUSER=wp_cli_test" >> $GITHUB_ENV
        echo "WP_CLI_TEST_DBPASS=password1" >> $GITHUB_ENV
        echo "WP_CLI_TEST_DBHOST=127.0.0.1:${{ job.services.mysql.ports['3306'] }}" >> $GITHUB_ENV

    - name: Prepare test database
      run: composer prepare-tests

    - name: Check Behat environment
      run: WP_CLI_TEST_DEBUG_BEHAT_ENV=1 composer behat

    - name: Run Behat
      env:
        WP_VERSION: '${{ matrix.wp }}'
      run: composer behat || composer behat-rerun
